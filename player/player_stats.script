-- Editable player health and damage
go.property("health_points", 20)
--go.property("player_damage", 2)

-- Not self, because it should be shared across player instances
local current_health = 20

-- TODO Right now just resets health, set to beginning of conversations/pre-battle to allow
-- player to prepare for battle better, save state before battle
local function kill_player(self)
	pprint("player_stats.script:kill_player(): You have died!")
	current_health = self.health_points
	msg.post("main:/playerHUD", "set_current_hp", {current_hp = 20})
end

-- TODO if player can load/save in battle then should set hp to load status, if not then just reset to full
function init(self)
	msg.post("main:/playerHUD", "set_current_hp", {current_hp = current_health})
	msg.post("main:/playerHUD", "set_max_hp", {max_hp = self.health_points})
	--pprint("player_stats.script: Init player_stats.script in level "..tostring(msg.url()))
end

--TODO can send messages to new player stats being created, or move to main:/
function final(self)
	--pprint("player_stats.script: delete")
end

function on_message(self, message_id, message, sender)
	-- Player is hit by enemy or other damaging object
	if message_id == hash("damage_player") then
		-- pprint("player_stats.script: "..tostring(msg.url()))
		-- pprint("player_stats.script: Damaging player")
		current_health = current_health - message.damage
		msg.post("main:/playerHUD", "set_current_hp", {current_hp = current_health})
		if current_health <= 0 then
			msg.post("main:/playerHUD", "set_current_hp", {current_hp = 0})
			kill_player(self)
		end
	
	-- Player uses item or gets healed
	elseif message_id == hash("heal_player") then
		-- Preserve item if player tries to use item at max health
		if current_health == self.health_points then
			pprint("player_stats.script: Player already has full health")
			--msg.post(sender, "keep_item")
		elseif (message.heal_amount + current_health) >= self.health_points then
			current_health = self.health_points
			msg.post("main:/inventory", "use_item", {"health_potion", 1})
		else
			current_health = current_health + message.heal_amount
			msg.post("main:/inventory", "use_item", {"health_potion", 1})
		end

		msg.post("main:/playerHUD", "set_current_hp", {current_hp = current_health})

	elseif message_id == hash("quest_reward") then
		pprint("player_stats.script: player received gold["..message[1].."] and exp["..message[2].."]")

	elseif message_id == hash("test") then
		pprint("player_stats.script: test message sent from battle_player.script")
	end
end