local iso_ground = require "main/ground.isometric_ground"

function init(self)

-- Basic info to calculate map
local tilewidth = iso_ground.tilewidth
local tileheight = iso_ground.tileheight
local mapwidth = iso_ground.width
local mapheight = iso_ground.height
local mapsize = vmath.vector3(tilewidth * mapwidth, tileheight * mapheight, 0) -- Total size of map
local pos = vmath.vector3(0, 0, 0) -- Bottom left of map

-- Data of what to draw, make sure to label different animations 1, 2, 3...
local drawData = iso_ground.layers.data -- NEED TO FIX, HOW TO ACCESS DATA??????????

-- Position calculations
local mappos = vmath.vector3(0, 0, 0) 		 -- Current grid location
local screenpos = vmath.vector3(0, 0, 0) -- Current pixel location

--Draw the tiles
	for i,p in ipairs(drawData) do
	end



-- Table to contain tile's to change type
self.tile_map = {}

pos.x = pos.x + 64

for i = 1, 10 do
	pos.x = pos.x + 96
	local id = factory.create("#tile_factory", pos, nil, { image = hash("33") })
	table.insert(self.tile_map, id)
		for j = 1, 10 do
			pos.y = pos.y + 32
			pos.z = pos.z -.01
			id = factory.create("#tile_factory", pos)
			table.insert(self.tile_map, id)
		end
	pos.y = pos.y - 320
	pos.z = pos.z + .1
--	msg.post(id, "play_animation", {is = hash("flat_ground")})
	end

--pos.x = pos.x - 1344
--pos.y = pos.y + 32
--pos.z = pos.z -.01
--for i = 1, 10 do
	--self.new_ground = factory.create("#tile_factory", pos)
	--pos.x = pos.x + 128
	--end
end

