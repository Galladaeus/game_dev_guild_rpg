-- Might not need if all counts are handled in message passing
function get_number_of_enemies(self)
	local count = 0
	for i in pairs(self.enemy_list) do
		count = count + 1
	end
	return count
end

function init(self)
	-- Keep track of all the enemies on the battlefield
	self.enemy_list = {}

	self.number_of_enemies = 0
	self.enemy_iterator = 1
	
	-- For testing purposes
	table.insert(self.enemy_list, {url = "/enemyRat"})
	pprint(self.enemy_list)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("end_player_turn") then
		pprint("battle_controller.script: player turn is over")
		
		msg.post(self.enemy_list[self.enemy_iterator].url, "start_turn")
		pprint("battle_controller.script: enemy"..self.enemy_iterator.." is taking their turn")

	elseif message_id == hash("end_enemy_turn") then
		-- If every enemy has completed their turn
		if self.enemy_iterator == self.number_of_enemies then
			pprint("battle_controler.script: Enemy turns are over")
			msg.post("/battlePlayer", "enemy_turn_over")
		else 
			self.enemy_iterator = self.enemy_iterator + 1
			msg.post(self.enemy_list[self.enemy_iterator], "start_turn")
		end

	elseif message_id == hash("new_enemy") then
		-- TODO should also add enemy info into self.enemy_list
		self.number_of_enemies = self.number_of_enemies + 1
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
