function init(self)
	self.check_exit = gui.get_node("exitCheck")
	self.confirm_exit = gui.get_node("acceptExitButton")
	self.cancel_exit = gui.get_node("declineExitButton")

	self.door_url = msg.url(nil, nil, nil)
	self.player_url = msg.url(nil, nil, nil)

	gui.set_enabled(self.check_exit, false)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("open_exit_check") then 
		msg.post(".", "acquire_input_focus")
		gui.set_enabled(self.check_exit, true)
		
		self.door_url.socket = sender.socket
		self.door_url.path = message[1]
		self.door_url.fragment = hash("world_door")

		pprint("self.door_url = "..tostring(self.door_url))
	end
end

function on_input(self, action_id, action)
	if action_id == hash("mouse_press") then
		local x = action.x
		local y = action.y

		if gui.pick_node(self.confirm_exit, x, y) and action.pressed then
			msg.post(".", "release_input_focus")
			gui.set_enabled(self.check_exit, false)
			msg.post(self.door_url, "player_entered")

		elseif gui.pick_node(self.cancel_exit, x, y) and action.pressed then
			gui.set_enabled(self.check_exit, false)
			msg.post(".", "release_input_focus")
		end
	end
	
	return true
end
